INCLUDE 'NICA_Gold';

PROCEDURE INJECT NUM PSI_DEG; {at injection: SX = 0, SY, SZ = sin PSI, cos PSI}
  VARIABLE X 100; VARIABLE I 1;
  VARIABLE PSI 1; VARIABLE SY 1; VARIABLE SZ 1;
  PSI := DEG2RAD(PSI_DEG); {PSI IN RADIANS}
  X := LINSPACE(-3E-3, 3E-3, NUM);
  SY := SIN(PSI); SZ := COS(PSI);
  CR;
  SR 0 0 0 0 0 0 0 0 1; SSR 0 SY SZ;
  LOOP I 1 NUM;
    SR X|I 0 0 0 0 0 0 0 1; SSR 0 SY SZ;
    SR 0 0 X|I 0 0 0 0 0 1; SSR 0 SY SZ;
    SR 0 0 0 0 0 (X|I)/10 0 0 1; SSR 0 SY SZ;
  ENDLOOP;
ENDPROCEDURE;

PROCEDURE MAIN;

  {data-files}
  VARIABLE MRKR 200;
  {tracking}

  VARIABLE DGAMMA 1;   {current beam y offset}
  VARIABLE NFREE 1; {number of turns to track AFTER flipping}
  VARIABLE FTR 1;   {"free"-block tracking data output scarcity control}
  VARIABLE CASE 1; {current switch case} VARIABLE PCT 1; {tracking percent}
  VARIABLE I 1; {data output counter}
  VARIABLE NTURN 1;  {number of turn for diff process}
  VARIABLE U 1;  {Acceleration Voltage, eV}
  VARIABLE m_p 1; {proton mass, eV}
  VARIABLE GAMMA 1; {equal to energy of proton}
  VARIABLE NTOT 1; {total turns of jump process}
  VARIABLE dQ_max 1; VARIABLE dQ_min 1; {change of quadrupole strength at jump}
  VARIABLE DELTAQ 1; {curent dQ from initial}
  VARIABLE SCALE 1; VARIABLE NSWITCH 1; {for tracking}


  {lattice}
  VARIABLE SGX 1; VARIABLE SGY 1;

  {particles}
  VARIABLE PNUM 1; {number of particles per bunch}
  VARIABLE PSI0_DEG 1; {initial SPIN tilt angle}
  VARIABLE RAYH 10000 8; VARIABLE SPIH 10000 3; {keeps RAY, SPI data after each turn}
  VARIABLE MUARR 100 4; {holds NU, NX, NY, NZ of the ray ensemble}
  {^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^}
  OV 3 3 0;
  TRR 1; {turn on RESUME MODE}
  GAMMA := 7.0;
  SET_FOR_PROTONS GAMMA;
  {^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^}
  PNUM := 10; {x 3 bunches + 1 (reference ray)}
  {********** CONTROLS **********}
  NSWITCH := 6225;
  PSI0_DEG := 90;    {align inital spin with the polarization axis for 100% initial polarization}
  MRKR := 'JUMP';
  NFREE := 3000; {a small number of post-flipping turns}
  {***********************************}

  {inject particles}
  INJECT PNUM PSI0_DEG; SRAY RAYH; SSPI SPIH; {saves RAY, SPI against CR}
  WRITE 6 '^^^^ INITIAL SPIN PSI'&SF(PSI0_DEG,'(F15.7)');

  {++++++++++ PREPARING FILES FOR DATA OUTPUT ++++++++++}
  OPENF 100501 'dat/TR/'&MRKR&'/TRPSPI_'&MRKR&'.dat' 'REPLACE';
  WRITE 100501 '# number of rays:   '&SI(PNUM*3+2);      {cf. INJECT procedure (+1 for COSY's default 0-ray)}
  WRITE 100501 '# TURN PID S_X S_Y S_Z';
  WRITETBL 100501 SPI 3 SF(0, '(I15)');

  OPENF 100502 'dat/TR/'&MRKR&'/TRPRAY_'&MRKR&'.dat' 'REPLACE';
  WRITE 100502 '# number of rays:   '&SI(PNUM*3+2);
  WRITE 100502 '# TURN PID X A Y B T D';
  WRITETBL 100502 RAY 6 SF(0, '(I15)');

  OPENF 100503 'dat/TR/'&MRKR&'/TRMUARR_'&MRKR&'.dat' 'REPLACE';
  WRITE 100503 '# number of rays:   '&SI(PNUM*3+2);
  WRITE 100503 '# TURN PID NU NX NY NZ';
  {+++++++++++++++++++++++++++++++++++++++++++++++++++++}

  {continue    (lattice is set the last case of the previous loop)   }
  {   tracking after flipping for awhile   }
  WRITE 6 'FREE POST-FLIP TRACKING';

  DELTAQ := 0;
  LATTICE SGX SGY 1 DELTAQ;          {lattice}
  WRITE 6 'END of LATTICE';

  NTURN:=100;
  TR NTURN NINT(NTURN) -1 -3 1.2 1.2 0 0 -12;
  GET_TUNE_ENSEMBLE MUARR;          {compute nu, nbar for the current turn}
  WRITETBL 100501 SPI   3 SF(NTURN, '(I15)');  {output data}
  WRITETBL 100502 RAY   6 SF(NTURN, '(I15)');
  WRITETBL 100503 MUARR 4 SF(NTURN, '(I15)');
  {... saving RAY, SPI unnecessary since lattice unchanged}
ENDPROCEDURE; {MAIN}

PROCEDURE RUN;
  MAIN;
ENDPROCEDURE; {RUN}
RUN; END;
