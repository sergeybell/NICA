{in this code i approach the Wien-filter E-field from a non-frozen}
{to the frozen value. as i do so, the n-bar axis flips from the vertical}
{to a horizontal orientation (the lattice is tilted). i look at how}
{spin-vector dispersion behaves during this flipping}

INCLUDE 'bin/setups/BYPASS/FULL_SEX_wRC';

PROCEDURE INJECT NUM PSI_DEG; {at injection: SX = 0, SY, SZ = sin PSI, cos PSI}
  VARIABLE X 100; VARIABLE I 1;
  VARIABLE PSI 1; VARIABLE SY 1; VARIABLE SZ 1;
  PSI := DEG2RAD(PSI_DEG); {PSI IN RADIANS}
  X := LINSPACE(-3E-3, 3E-3, NUM);
  SY := SIN(PSI); SZ := COS(PSI);
  CR;
  SR 0 0 0 0 0 0 0 0 1; SSR 0 SY SZ;
  LOOP I 1 NUM;
    SR X|I 0 0 0 0 0 0 0 1; SSR 0 SY SZ;
    SR 0 0 X|I 0 0 0 0 0 1; SSR 0 SY SZ;
    SR 0 0 0 0 0 (X|I)/10 0 0 1; SSR 0 SY SZ;
  ENDLOOP;
ENDPROCEDURE;

                {(1)        (1,2,3,4)   (1)     (1)  }
PROCEDURE MAIN CASEPARS    LATPARS     TILTS   DATDIR;
                {Dy: from,   SEXT [2st],        folder_name,
                     rate    CORR [2st],
                      }
  {data-files}
  VARIABLE WHERE 500; VARIABLE MRKR 200;
  {tracking}
  VARIABLE DGAMMA 1;   {current beam y offset}
  VARIABLE DyRNG 1;  {initial beam y offset (final = 0) -- or -- Dy range to traverse}
  VARIABLE DyRATE 1; { Dy change rate in [units/turn] }
  VARIABLE NSWITCH 1; {number of Dy switchings (1 switching per turn)}
  VARIABLE NFREE 1; {number of turns to track AFTER flipping}
  VARIABLE SCALE 1; {scale needed to keep data below a certain size}
  VARIABLE FTR 1;   {"free"-block tracking data output scarcity control}
  VARIABLE CASE 1; {current switch case} VARIABLE PCT 1; {tracking percent}
  VARIABLE I 1; {data output counter}
  {lattice}
  VARIABLE SGX 1; VARIABLE SGY 1;
  VARIABLE NURC 1;VARIABLE NULS 1; {+ TILTS passed above}
  {particles}
  VARIABLE PNUM 1; {number of particles per bunch}
  VARIABLE PSI0_DEG 1; {initial SPIN tilt angle}
  VARIABLE RAYH 1000 8; VARIABLE SPIH 1000 3; {keeps RAY, SPI data after each turn}
  VARIABLE MUARR 100 4; {holds NU, NX, NY, NZ of the ray ensemble}
  {^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^}
  PROCEDURE PUSH DGAMMA;
    SET_FOR_DEUTERONS 1.1279235+DGAMMA; {set new beam energy}
    LATTICE SGX SGX SGY                 {recompute lattice}
            99.14855                {optimal @ y=1.1279235}
            NURC NULS TILTS;

    LRAY RAYH; LSPI SPIH;              {loads RAY, SPI data after clearing}
    TR 1 -1 -1 -3 1.1 1.1 0 0 -12;     {push one turn}
    SRAY RAYH; SSPI SPIH;              {saves RAY, SPI against CR}
  ENDPROCEDURE; {PUSH}
  {^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^}
  PNUM := 10; {x 3 bunches + 1 (reference ray)}
  SGX  := LATPARS(1); SGY  := LATPARS(2);
  NURC := LATPARS(3); NULS := LATPARS(4);
  DyRNG := CASEPARS(1);
  DyRATE := CASEPARS(2);
  {********** CONTROLS **********}
  NSWITCH := INT(DyRNG/DyRATE);
  PSI0_DEG := 90;    {align inital spin with the polarization axis for 100% initial polarization}
  MRKR := 'resflip-vert';
  NFREE := 3000; {a small number of post-flipping turns}
  {***********************************}

  {inject particles}
  INJECT PNUM PSI0_DEG; SRAY RAYH; SSPI SPIH; {saves RAY, SPI against CR}
  WRITE 6 '^^^^ INITIAL SPIN PSI'&SF(PSI0_DEG,'(F15.7)');

  {++++++++++ PREPARING FILES FOR DATA OUTPUT ++++++++++}
  OPENF 100501 FILENAME(WHERE, 'TRPSPI', MRKR) 'REPLACE';
  WRITE 100501 '# number of rays:   '&SI(PNUM*3+2);      {cf. INJECT procedure (+1 for COSY's default 0-ray)}
  WRITE 100501 '# TURN PID S_X S_Y S_Z';
  WRITETBL 100501 SPI 3 SF(0, '(I15)');
  OPENF 100502 FILENAME(WHERE, 'TRPRAY', MRKR) 'REPLACE';
  WRITE 100502 '# number of rays:   '&SI(PNUM*3+2);
  WRITE 100502 '# TURN PID X A Y B T D';
  WRITETBL 100502 RAY 6 SF(0, '(I15)');
  OPENF 100503 FILENAME(WHERE, 'TRMUARR', MRKR) 'REPLACE';
  WRITE 100503 '# number of rays:   '&SI(PNUM*3+2);
  WRITE 100503 '# TURN PID NU NX NY NZ';
  {+++++++++++++++++++++++++++++++++++++++++++++++++++++}

  {tracking (during flipping)}
  SCALE := INT(NSWITCH/5000); IF SCALE=0; SCALE:=1; ENDIF; {output data every SCALE}
  LOOP CASE 1 NSWITCH; DGAMMA := DyRNG - CASE*DyRATE;
    WRITE 6 'CASE '&SF(CASE, '(I10)');
    PUSH DGAMMA;  {push through FTR turns}
      IF MOD(CASE, SCALE)=0;
        GET_TUNE_ENSEMBLE MUARR;          {compute nu, nbar for the current turn}
        WRITETBL 100501 SPI   3 SF(CASE, '(I15)');
        WRITETBL 100502 RAY   6 SF(CASE, '(I15)');
        WRITETBL 100503 MUARR 4 SF(CASE, '(I15)');
      ENDIF;
  ENDLOOP;
  
  {continue    (lattice is set the last case of the previous loop)   }
  {   tracking after flipping for awhile   }
  WRITE 6 'FREE POST-FLIP TRACKING';
  FTR := INT(NFREE/500); {track for NFREE turns, output data every FTR turns}
  LRAY RAYH; LSPI SPIH;              {loads RAY, SPI after previous tracking ...}
  LOOP CASE 1 500;
    TR FTR -FTR -1 -3 1.1 1.1 0 0 -12; {track for FTR turns}
      GET_TUNE_ENSEMBLE MUARR;          {compute nu, nbar for the current turn}
      WRITETBL 100501 SPI   3 SF(NSWITCH+CASE*FTR, '(I15)');  {output data}
      WRITETBL 100502 RAY   6 SF(NSWITCH+CASE*FTR, '(I15)');
      WRITETBL 100503 MUARR 4 SF(NSWITCH+CASE*FTR, '(I15)');
      {... saving RAY, SPI unnecessary since lattice unchanged}
  ENDLOOP;
ENDPROCEDURE; {MAIN}

PROCEDURE RUN;                                      {code iterates over a field of possible nbar rates-of-change}
  VARIABLE DATDIR 500; {where to output data files}
  VARIABLE TRIALV 1; VARIABLE TRIALP 1; {iterator over DEGperSWITCH}
  VARIABLE ATTUNE 1 2; {beam y attuning change rate [unit/switch]}
  {LATTICE ARGUMENTS}
  VARIABLE SGX 1; VARIABLE SGY 1;
  VARIABLE LATPARS 1 4; {[flat] array (SGX, SGY) + (NURC, NULS)}
  VARIABLE TILTS 92; {elements tilts vector}
  {********** CONTROLS **********}
  SGX := 0.0475358; SGY :=  -0.0124713;
  ATTUNE(1) := 1e-3;
  {******************************}
  GROUTF 'img/dump/TR' 1;
  DIRSET_AUTO 1;
  OV 3 3 0;
  TRR 1; {turn on RESUME MODE}

  { SET lattice parameters }
  LATPARS(1) := SGX;     LATPARS(2) := SGY;
  LATPARS(3) := 0;{nuRC} LATPARS(4) := 0;{nuLS}
  TILTS := VEGAUSS(0.1E-3, 1E-3, 92, 'data/BYPASS_SEX_wRC/ADIABATICITY/GAUSS');   {in radians}

  LOOP TRIALP -6 -6;                                                                      {the two loops set up an experiment}
    LOOP TRIALV 1 2; IF TRIALV=1; TRIALV:=1; ELSEIF TRIALV=2; TRIALV:=5; ENDIF;         {by setting the nbar rate-of-change}
      ATTUNE(2) := TRIALV * 10^(TRIALP); {[unit/switch] rate-of-change}
      DATDIR := 'data/BYPASS_SEX_wRC/ADIABATICITY/continuous/RATE_'&MRK(TRIALV)&'E'&MRK(TRIALP)&'/SHORT/';
      MAIN ATTUNE LATPARS TILTS DATDIR;
    ENDLOOP; {TRIALV}
  ENDLOOP; {TRIALP}

ENDPROCEDURE; {RUN}
RUN; END;
